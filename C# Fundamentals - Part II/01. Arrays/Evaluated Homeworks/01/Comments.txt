Зад. 1
Работи вярно.

Зад. 2
Работи вярно.

Зад. 3
Работи вярно.

Зад. 4
Приемам, че задачата работи вярно с две препоръки:
1. Добре е да изведеш кой е елемента от масива, който се повтаря максимален брой пъти.
2. Когато в масива няма съседни еднакви елементи, извежда, че дължината на максималната поредица от съседни еднакви елементи е 1. Според мен може да изведе и 0, но това е въпрос на гледна точка дали ще приемем един елемент като поредица или не.

Зад. 5
Приемам, че задачата работи вярно отново с две препоръки:
1. Добре е да изведеш поредицата от елементи, които са в нарастващ ред.
2. Когато масива съдържа само еднакви или намаляващи елементи, извежда, че дължината на максималната поредица от нарастващи елементи е 1. Тук според мен е по-правилно да се изведе 0, тъй като един елемент не може да е поредица от нарастващи елементи, а трябва да са поне два.

Зад. 6
Задачата не работи коректно във всички случаи.
1. Имаш грешка на ред 23: if (i + setLength > arr.Length - 1). С този код не хващащ последния елемент от масива, махни " - 1" и се оправя. Пробвай с пример:
N = 6, K = 3, масив: { 2, 3, 6, 5, 2, 5 }. Втората тройка числа има по-голяма сума от първата (12), а резултатът на програмата е 11, защото не стига до края на масива.
2. Решението ти обхваща последователности от числа, които не се застъпват. В горния пример, проверяваш първо сумата на 2 + 3 + 6, а след това на 5 + 2 + 5. Ако вземем предвид всички възможни тройки последователни числа от масива, включително застъпващите се, тройката последователни числа с най-голяма сума всъщност е 3 + 6 + 5 (14).
3. Препоръка: задачата може да се реши и с един цикъл, като се избегне проблема в точка 2. Виж в книгата Въведение в програмирането, упътването към зад. 7 в главата за масиви: http://www.introprogramming.info/intro-csharp-book/read-online/glava7-masivi/, както и във форума, нещо подобно на http://forums.academy.telerik.com/49019/c%23-arrays-6-%D0%B7%D0%B0%D0%B4%D0%B0%D1%87%D0%B0?show=51237#a51237
4. Добре би било ако можеш да изведеш намерената поредица.

Зад. 7
Работи вярно. 
Подходящо е използвано разменянето на стойността на 2 числа с битови операции.

Зад. 8
Работи вярно. 
Би било добре ако можеш и да изведеш намерената поредица.

Зад. 9
Работи вярно.
Препоръка: би могла да се реши и със сортиране на масива и един цикъл: http://www.introprogramming.info/intro-csharp-book/read-online/glava7-masivi/ - упътването към зад. 10.

Зад. 10
Работи вярно.
Би било добре ако можеш и да изведеш намерената поредица.

Зад. 11
Работи вярно.

Зад. 12
Работи вярно.
Вместо метода BinarySearch може да се използва вградения Array.IndexOf().
Препоръка - би могла да се направи да работи и за малки букви. 
Алтернативно решение без масив: http://www.introprogramming.info/intro-csharp-book/read-online/glava7-masivi/ - упътването към зад. 15.

Зад. 13
Работи вярно.
За попълването на масивите left и right може да се използва и вградения метод Array.Copy().

Зад. 14
Работи вярно.

Зад. 15
Работи вярно. 
Подходящо е използван е булев масив за оптимизация.

Зад. 16
Работи вярно.
Използвани са подходящо битови операции за намиране на всички подмножества в даден масив. Използван е и StringBuilder.

Зад. 17
Работи вярно.

Зад. 18
Работи вярно.

Зад. 19
Работи вярно.

Зад. 20
Работи вярно.

Зад. 21
Работи вярно.

Обобщение: 
Много добре написано домашно. Рещени са и задачите със звездичка, заради което получава бонус. Използвани са методи, рекурсия, битови операции, StringBuilder.
Само една задача (6) не работи напълно вярно.
Форматирането е добро. Могат само да се добавят навсякъде коментари с условието на задачата и главния файл, в който се намира програмата, както и класа да се преименуват от Program.cs и Program на нещо по-подходящо. 